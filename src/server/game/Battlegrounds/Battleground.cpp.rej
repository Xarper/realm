--- src/server/game/Battlegrounds/Battleground.cpp
+++ src/server/game/Battlegrounds/Battleground.cpp
@@ -746,50 +746,6 @@
                 SetArenaMatchmakerRating(GetOtherTeam(winner), loser_matchmaker_rating + loser_matchmaker_change);
                 SetArenaTeamRatingChangeForTeam(winner, winner_change);
                 SetArenaTeamRatingChangeForTeam(GetOtherTeam(winner), loser_change);
-				                /** World of Warcraft Armory **/
-                if (sWorld->getBoolConfig(CONFIG_ARMORY_ENABLE))
-                {
-                    uint32 maxChartID;
-                    QueryResult result = CharacterDatabase.PQuery("SELECT MAX(gameid) FROM armory_game_chart");
-                    if(!result)
-                        maxChartID = 0;
-                    else
-                    {
-                        maxChartID = (*result)[0].GetUInt32();
-                        //result.release();
-                    }
-                    uint32 gameID = maxChartID+1;
-                    for(BattlegroundScoreMap::const_iterator itr = PlayerScores.begin(); itr != PlayerScores.end(); ++itr)
-                    {
-                        Player* player = ObjectAccessor::FindPlayer(itr->first);
-                        if (!player)
-                            continue;
-                        uint32 plTeamID = player->GetArenaTeamId(winner_arena_team->GetSlot());
-                        int changeType;
-                        uint32 resultRating;
-                        uint32 resultTeamID;
-                        int32 ratingChange;
-                        if (plTeamID == winner_arena_team->GetId())
-                        {
-                            changeType = 1; //win
-                            resultRating = winner_team_rating;
-                            resultTeamID = plTeamID;
-                            ratingChange = winner_change;
-                        }
-                        else
-                        {
-                            changeType = 2; //lose
-                            resultRating = loser_team_rating;
-                            resultTeamID = loser_arena_team->GetId();
-                            ratingChange = loser_change;
-                        }
-                        std::ostringstream sql_query;
-                        //                                                        gameid,              teamid,                     guid,                    changeType,             ratingChange,               teamRating,                  damageDone,                          deaths,                          healingDone,                           damageTaken,,                           healingTaken,                         killingBlows,                      mapId,                 start,                   end
-                        sql_query << "INSERT INTO armory_game_chart VALUES ('" << gameID << "', '" << resultTeamID << "', '" << player->GetGUID() << "', '" << changeType << "', '" << ratingChange  << "', '" << resultRating << "', '" << itr->second->DamageDone << "', '" << itr->second->Deaths << "', '" << itr->second->HealingDone << "', '" << itr->second->DamageTaken << "', '" << itr->second->HealingTaken << "', '" << itr->second->KillingBlows << "', '" << m_MapId << "', '" << m_StartTime << "', '" << m_EndTime << "')";
-                        CharacterDatabase.Execute(sql_query.str().c_str());
-                    }
-                }
-                /** World of Warcraft Armory **/
                 sLog->outArena("Arena match Type: %u for Team1Id: %u - Team2Id: %u ended. WinnerTeamId: %u. Winner rating: +%d, Loser rating: %d", m_ArenaType, m_ArenaTeamIds[BG_TEAM_ALLIANCE], m_ArenaTeamIds[BG_TEAM_HORDE], winner_arena_team->GetId(), winner_change, loser_change);
                 if (sWorld->getBoolConfig(CONFIG_ARENA_LOG_EXTENDED_INFO))
                     for (Battleground::BattlegroundScoreMap::const_iterator itr = GetPlayerScoresBegin(); itr != GetPlayerScoresEnd(); ++itr)
